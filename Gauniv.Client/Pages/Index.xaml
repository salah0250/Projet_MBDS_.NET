<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:Gauniv.Client.ViewModel"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             x:Class="Gauniv.Client.Pages.Index"
             Title="Index"
             x:DataType="vm:IndexViewModel"
             BindingContext="{vm:IndexViewModel}">
    <!-- 
            A vous de créer la liste avec le bon binding. Une <ListBox>, une <CollectionView> ou autre fera l'affaire 
            La propriété ItemsSource doit pointé vers la propiété Books de votre dataContext actuelle 
            Utilisé ListBox.ItemTemplate pour définir comment sont affiché vos items
            <ListBox.ItemTemplate>
        
            A vous de faire afficher les champs que vous voulez afficher pour savoir quel sont les livre disponible
            <xxx Text="{Binding MyPropertyOnMyObjectBook}"/>
            N'oublier pas non plus de rajouter un boutton (ou une autre technique) quelque part pour allez voir les détails de votre livre
            Les propriété Command et CommandParameter pourrons vous aider ! 
            Command="{Binding DataContext.ItemSelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}" 
            CommandParameter="{Binding .}"
    -->
    <Label Text="List des jeux" />
</ContentPage>